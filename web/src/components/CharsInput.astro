---
import Loading from "../icons/Loading.astro";
---

<div class="flex flex-col gap-4 w-full items-center">
  <textarea
    class="animate-fade-left bg-transparent outline-none max-w-sm w-full flex h-32 rounded border border-neutral-100 p-2 resize-none"
    placeholder="Paste characters here..."></textarea>
  <button
    class="animate-fade-up py-2 px-8 bg-yellow-500 hover:bg-yellow-600 disabled:bg-gray-600 transition-all font-bold rounded"
    disabled>Go</button
  >
  <Loading
    id="loading-svg"
    class="opacity-0 fill-white size-8 transition-all"
  />
</div>

<script>
  import { textToPdfUrl } from "../scripts/pdf";
  import { isHanzi } from "../scripts/utils";

  const $textarea = document.querySelector("textarea") as HTMLTextAreaElement;
  const $loading = document.querySelector("#loading-svg") as SVGSVGElement;

  let isCompositioning = false;

  $textarea.addEventListener("compositionstart", () => {
    isCompositioning = true;
  });

  $textarea.addEventListener("compositionend", () => {
    isCompositioning = false;
  });

  $textarea.addEventListener("input", () => {
    if (!isCompositioning)
      $textarea.value = $textarea.value.trim().replace(/\s+/g, "");
    if ($textarea.value.length <= 0 || !isHanzi($textarea.value)) {
      $button.disabled = true;
    } else {
      $button.disabled = false;
    }
  });

  const $button = document.querySelector("button") as HTMLButtonElement;

  $button.addEventListener("click", async () => {
    $loading.style.opacity = "1";
    const pdfUrl = await textToPdfUrl($textarea.value);
    $loading.style.opacity = "0";

    const link = document.createElement("a");
    link.href = pdfUrl;
    const rand = crypto.getRandomValues(new Uint32Array(8))[0].toString(16);
    link.download = `writing-${rand}.pdf`;
    link.click();
  });

  $textarea.focus();
</script>
